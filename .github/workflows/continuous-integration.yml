name: Continuous Integration

on:
  pull_request: ~
  push:
    branches: ['*.*.x']

jobs:
  composer-validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.1]
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none
      - run: composer validate --strict --ansi

  check-require:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.1]
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none
      - uses: ramsey/composer-install@v2
        with:
          composer-options: --optimize-autoloader
      - run: composer check-require

  check-unused:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.1]
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none
      - uses: ramsey/composer-install@v2
        with:
          composer-options: --optimize-autoloader
      - run: composer check-unused

  composer-normalize:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.1]
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none
      - uses: ramsey/composer-install@v2
        with:
          composer-options: --optimize-autoloader
      - run: composer normalize --dry-run --diff --ansi

  php-cs-fixer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.1]
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2, cs2pr
          coverage: none
      - uses: ramsey/composer-install@v2
        with:
          composer-options: --optimize-autoloader
      - run: composer fixcs -- --dry-run --diff --format=checkstyle --ansi | cs2pr

  rector:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.1]
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none
      - uses: ramsey/composer-install@v2
        with:
          composer-options: --optimize-autoloader
      - run: composer rector -- --dry-run

  psalm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.1]
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none
      - uses: ramsey/composer-install@v2
        with:
          composer-options: --optimize-autoloader
      - run: composer psalm -- --php-version=${{ matrix.php }} --stats --output-format=github --shepherd

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.1, 8.2]
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
      - uses: ramsey/composer-install@v2
        with:
          composer-options: --optimize-autoloader
      - run: composer test -- --colors=always --order-by=random --coverage-clover coverage.xml
      - if: ${{ matrix.php == '8.1' }}
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  infection:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.1]
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: pcov
      - uses: ramsey/composer-install@v2
        with:
          composer-options: --optimize-autoloader
      - run: composer infection
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
